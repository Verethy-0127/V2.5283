######################### SENSORLESS #########################

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[homing_override]
axes: xyz
set_position_z: -1.8

gcode:
  {% set Z = 20  %}
    G90
    G1 Z{Z}  # Z lift

  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G90
    G0 Y150 F{200*60} X150 F{200*60}
    G28 Z
    G1 Z10
  {% endif %}

######################### PRINT START / END #########################

[gcode_macro PRINT_START]
gcode:
    {% set HOTEND_TEMP = params.HOTEND|default(245)|float %}
    {% set chamber = params.CHAMBER|default(0)|int %}
    {% set bed = params.BED|int %}
	M104 S180
    M140 S{bed}
    CG28
    CHECK_PROBE_DETACHED
    G90
    {% if printer["temperature_sensor chamber"].temperature < chamber %}
        HEATSOAK T={bed} MOVE=1
        M190 S{bed}
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}
    {% else %}
        {% if printer.heater_bed.temperature < (bed-2) %}
            HEATSOAK T={bed} MOVE=1
            M190 S{bed}
        {% else %}
            HEATSOAK T={bed} MOVE=0
        {% endif %}
    {% endif %}
    M106 S0
    BED_MESH_CLEAR
    G32
    Smart_Park
	M109 S{HOTEND_TEMP}
    LINE_PURGE

[gcode_macro PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400
    G92 E0
    G1 E-8.0 F3600
    
    TURN_OFF_HEATERS
    
    G90
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
    G0 X260 Y{th.axis_maximum.y - 2} F12000
    M107
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    
######################### MISC #########################

[gcode_macro G32]
gcode:
    CG28
    BED_MESH_CLEAR
    QGL
    BMC

[gcode_macro Purge]
gcode:
    {% set HOTEND_TEMP = params.HOTEND_TEMP|default(245)|float %}
    CG28
    G90
    G0 X261 Y300 F9000
    M109 S{HOTEND_TEMP}  
    G0 Z0.5 F6000
    M83
    G1 E100 F300
    G1 E-10 F300
    G4 P10000
    G0 X210 F600
    G0 Z10
    M104 S180
    PARKBED

[gcode_macro HEATSOAK]
gcode:
    {% set t = params.T|default(110)|int %}
    {% set move = params.MOVE|default(1)|int %}

    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0
    M140 S{t}
    {% if t >= 100 %}
        M104 S180
        M106 S205
    {% else %}
        M106 S0
    {% endif %}
    {% if move == 1 %}
        CG28
        PARKBED
    {% endif %}

[delayed_gcode DELAYED_OFF]
gcode:
    OFF
    
[gcode_macro SWIPENOZZLE]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=SWIPENOZZLE
    G90
    G0 X255 Z10 Y300 F9000
    G0 Z1 F1500
    G0 X210 F9000
    G0 X255 F9000
    G0 X210 F9000
    G0 Z10  F1500
    RESTORE_GCODE_STATE NAME=SWIPENOZZLE

[delayed_gcode NEVERMORE_OFF]
gcode:
    SET_FAN_SPEED FAN=Nevermore SPEED=0

[gcode_macro Disable_Extruder]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

######################### CONDITIONAL HOMING #########################

[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
[gcode_macro XYCG28]
gcode:
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

[gcode_macro ZCG28]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
        G28 Z
    {% endif %}
    
######################### PARKING #########################

[gcode_macro PARKFRONT]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X150 Y0 Z50 F18000        
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
[gcode_macro PARKREAR]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKREAR
    G90
    G0 X200 Y300 Z15 F18000     
    RESTORE_GCODE_STATE NAME=PARKREAR
    
[gcode_macro PARKBED]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKBED
    G90
    G0 X150 Y150 Z15 F18000                                     
    RESTORE_GCODE_STATE NAME=PARKBED
    
######################### ALIASES/SHORTCUTS #########################

[gcode_macro BMC]
gcode:
    CG28
    BED_MESH_CALIBRATE

[gcode_macro QGL]
gcode:
    CG28
    QUAD_GANTRY_LEVEL

[gcode_macro OFF]
gcode:
    M84
    TURN_OFF_HEATERS
    M107
    SET_PIN PIN=caselight VALUE=0

[gcode_macro M600]
gcode:
    PAUSE

######################### FAST INFILL #########################

[gcode_macro _USE_INFILL_SQV]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sqv = svv.infill_sqv | default(printer.configfile.settings.printer.square_corner_velocity, true) %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ sqv }

[gcode_macro _USE_NORMAL_SQV]
gcode:
    {% set sqv = printer.configfile.settings.printer.square_corner_velocity %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ sqv }

[gcode_macro SET_INFILL_SQV]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set val = params.SQV|default(svv.infill_sqv|default(printer.configfile.settings.printer.square_corner_velocity, true), true) | int %}
    SAVE_VARIABLE VARIABLE=infill_sqv VALUE={val}

######################### GCODE BUTTONS #########################

[gcode_button BUTTON_CASELIGHT]
pin: ^!PG15
press_gcode:
    SET_PIN PIN=caselight VALUE=1
release_gcode:
    SET_PIN PIN=caselight VALUE=0.3

# [gcode_button BUTTON_NOZZLE_LED]
# pin: ^!PG14
# press_gcode:
#     set_nozzle_leds_on
# release_gcode:
#     set_nozzle_leds_off

######################### GITHUB BACKUP #########################

[gcode_shell_command backup_cfg]
command: sh /home/pi/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg